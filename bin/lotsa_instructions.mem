1110_00111010_0000_0000_0000_0000_0000  // R0 = 0, ZERO
1110_00111010_0000_0001_0000_0000_0001  // R1 = 1, ONE
1110_01001001_0000_0010_0000_0000_0000  // LDR R2, [R0] R2 = 0
1110_00001000_0010_0001_00000_00_0_0001 // ADD R1, R2, R1
1110_00000000_0001_0010_00000_00_0_0001 // AND R2, R1, R1 -> R2 = 1
1110_00010001_0010_0000_00000_00_0_0010 // TST R2, R2 -> 1 (not zero)
0000_1010_0000_0000_0000_0000_1000_0000 // B_Z 128
1110_00000010_0000_0010_00000_00_0_0001 // XOR R2, R0, R1 -> R2 = 0 ^ 1
1110_00010011_0010_0000_00000_00_0_0001 // TEQ R2, R1 -> 0 (is non zero)
0001_1010_0000_0000_0000_0000_1000_0000 // B_NZ 128
1110_00011000_0000_0010_00000_00_0_0000  // ORR R2, R0, R0 -> R2 = 0 | 0
1110_000_10111_0010_0000_00000_00_0_0010 // CMN R2, R2 -> 0 (is zero)
0001_1010_0000_0000_0000_0000_1000_0000  // B_NZ 128
1110_000_0100_0000_0010_00000_00_0_0001  // SUB R2, R0, R1 -> R2 = -1
1110_00010101_0010_0000_00000_00_0_0001  // CMP R2, R1 -> -2
0101_1010_0000_0000_0000_0000_1000_0000  // B_NN 128
1110_0001_0010_1111_1111_1111_0001_0000 // RET = BX R0